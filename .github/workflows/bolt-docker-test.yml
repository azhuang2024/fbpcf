name: Bolt publish docker

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Manually running this workflow will skip "Check New Commits" step and build image directly'
        default: "Run"

env:
  DISTRO: ubuntu
  REGISTRY: ghcr.io
  LOCAL_IMAGE_NAME: ${{ github.event.repository.name }}/ubuntu
  FBPCS_LOCAL_IMAGE_NAME: fbpcs/onedocker
  REGISTRY_IMAGE_NAME: ghcr.io/${{ github.repository }}/ubuntu
  TEST_REGISTRY_IMAGE_NAME: ghcr.io/${{ github.repository }}/test/ubuntu
  PL_CONTAINER_NAME: e2e_pl_container
  PA_CONTAINER_NAME: e2e_pa_container
  VERSION_TAG: latest-build
  COORDINATOR_IMAGE_DEV: ghcr.io/facebookresearch/fbpcs/coordinator:dev

jobs:
  test_and_push:
    runs-on: [self-hosted, e2e_test_runner]
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Build fbpcf docker image
      run: |
        ./build-docker.sh -u

    - name: Sanity check fbpcf library (v1)
      timeout-minutes: 3
      run: |
        ./run-sanity_check.sh -u -v 1
      working-directory: fbpcf/tests/github/

    - name: Sanity check fbpcf library (v2)
      timeout-minutes: 3
      run: |
        ./run-sanity_check.sh -u -v 2
      working-directory: fbpcf/tests/github/

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Clone latest stable fbpcs
      run: |
        git clone https://github.com/facebookresearch/fbpcs
        cd fbpcs
        git reset --hard $(curl \
        --header 'content-type: application/json' \
        "https://api.github.com/repos/facebookresearch/fbpcs/actions/workflows/12965519/runs?per_page=1&status=success" | jq \
        ".workflow_runs[0] .head_sha" | tr -d '"')

    - name: Build fbpcs image (this uses the locally built fbpcf image as a dependency)
      run: |
        cd fbpcs
        ./build-docker.sh onedocker -t ${{ env.VERSION_TAG }}

    - name: Tag fbpcf docker image
      run: |
        docker tag ${{ env.LOCAL_IMAGE_NAME }} ${{ env.REGISTRY_IMAGE_NAME }}:bolt_test_image

    - name: Push fbpcf image to registry
      run: |
        docker push --all-tags ${{ env.REGISTRY_IMAGE_NAME }}

    - name: Tag fbpcs docker image
      run: |
        docker tag ${{ env.FBPCS_LOCAL_IMAGE_NAME }}:${{ env.VERSION_TAG }} ${{ env.TEST_REGISTRY_IMAGE_NAME }}:bolt_test_image
        docker tag ${{ env.FBPCS_LOCAL_IMAGE_NAME }}:${{ env.VERSION_TAG }} ${{ env.TEST_REGISTRY_IMAGE_NAME }}:test_image

    - name: Push fbpcs image to test registry
      run: |
        docker push --all-tags ${{ env.TEST_REGISTRY_IMAGE_NAME }}

    - name: Pull coordinator image
      run: |
        docker pull ${{ env.COORDINATOR_IMAGE_DEV }}

    - name: End to end testing
      timeout-minutes: 60
      run: |
        docker run --rm -v "instances":"/instances" -v "$(realpath fbpcf_e2e_aws.yml):/home/pcs/pl_coordinator_env/fbpcf_e2e_aws.yml" -v "$(realpath bolt_config.yml):/home/pcs/pl_coordinator_env/bolt_config.yml" ${{ env.COORDINATOR_IMAGE_DEV }} python3.8 -m fbpcs.private_computation_cli.private_computation_cli bolt_e2e --bolt_config="bolt_config.yml"
      working-directory: fbpcf/tests/github/
